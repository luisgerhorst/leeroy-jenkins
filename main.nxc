// Sensors

int lightSensorLeft = IN_1;
int lightSensorMiddle = IN_2;
int lightSensorRight = IN_3;
int touchSensor = IN_4;

void setUpSensors() {
    SetSensorLight(lightSensorLeft);
    SetSensorLight(lightSensorMiddle);
    SetSensorLight(lightSensorRight);
    SetSensorTouch(touchSensor);
}

// Motors
int motorsLeftRight = OUT_AC;
int motorRight = OUT_A;
int motorLeft = OUT_C;

int motorHand = OUT_B;

// Light Sensors

int blackWhiteAverage = 0;

bool isWhite(int sensor) {
    return Sensor(sensor) > blackWhiteAverage;
}

bool isBlack(int sensor) {
    return Sensor(sensor) < blackWhiteAverage;
}

void calibrateLightSensors(int blackSensor, int whiteSensor1, int whiteSensor2) {
    int black = Sensor(blackSensor);
    int white = (Sensor(whiteSensor1) + Sensor(whiteSensor2)) / 2;
    blackWhiteAverage = (black + white) / 2;

    // Show calculated values.
    NumOut(0, LCD_LINE1, black);
    NumOut(0, LCD_LINE2, white);
    NumOut(0, LCD_LINE3, blackWhiteAverage);
    Wait(5*1000);
}

// Hand

#define GRAB_DEGREES 6*360+180

void grab() {
    /*
      Startposition: Graue Markierung an Kurbel nach oben, schwarze
      Markierung and Zahnrädern direkt vor Limit.
    */
    RotateMotor(motorHand, 100, -GRAB_DEGREES);
}

void release() {
    /*
      Startposition: Graue Markierung an Kurbel nach oben, Zahnräder
      ca. eine Umdrehung vor Limit.
    */
    RotateMotor(motorHand, 100, GRAB_DEGREES);
}

// Other

enum Turn { left, right, none };

// Program Flow

task main () {

    setUpSensors();
    calibrateLightSensors(lightSensorMiddle, lightSensorLeft, lightSensorRight);

    // Start
    OnFwd(motorsLeftRight, 100);

    while (true) {

        // Auf Linie.
        if (isWhite(lightSensorLeft) && isBlack(lightSensorMiddle) && isWhite(lightSensorRight)) {
            OnFwd(motorsLeftRight, 100);
        }

        // Parallel zu Linie, hoffentlich nicht ganz parallel.
        else if (isBlack(lightSensorLeft) && isBlack(lightSensorMiddle) && isBlack(lightSensorRight)) {
            // Weiter in Fahrtrichtung.
            OnFwd(motorsLeftRight, 50);
        }

        // Linie verloren.
        else if (isWhite(lightSensorLeft) && isWhite(lightSensorMiddle) && isWhite(lightSensorRight)) {
            // Zurückfahren
            OnRev(motorsLeftRight, 50);
        }

        // Rechte Seite wird schwarz.

        else if (isWhite(lightSensorLeft) && isBlack(lightSensorMiddle) && isBlack(lightSensorRight)) {
            Off(motorRight);
            OnFwd(motorLeft, 100);
        }

        else if (isWhite(lightSensorLeft) && isWhite(lightSensorMiddle) && isBlack(lightSensorRight)) {
            // Scharf rechts abbiegen. TODO: Verbessern.
            OnRev(motorRight, 100);
            OnFwd(motorLeft, 100);
        }

        // Linke Seite wird schwarz.

        else if (isBlack(lightSensorLeft) && isBlack(lightSensorMiddle) && isWhite(lightSensorRight)) {
            OnFwd(motorRight, 100);
            Off(motorLeft);
        }

        else if (isBlack(lightSensorLeft) && isWhite(lightSensorMiddle) && isWhite(lightSensorRight)) {
            // Scharf links abbiegen. TODO: Verbessern.
            OnFwd(motorRight, 100);
            OnRev(motorLeft, 100);
        }

    }
}
